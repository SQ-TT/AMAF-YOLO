# Ultralytics YOLO üöÄ, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

backbone:
  # [from, repeats, module, args]                  # output_shape (batch,channels,height,width)
  - [-1, 1, Conv, [64, 3, 2]]                     # 0-P1/2 [16,64,320,320]
  - [-1, 1, Conv, [128, 3, 2]]                    # 1-P2/4 [16,128,160,160]
  - [-1, 2, C3k2, [256, False, 0.25]]             # 2 [16,128,160,160]
  - [-1, 1, Conv, [256, 3, 2]]                    # 3-P3/8 [16,256,80,80]
  - [-1, 2, C3k2, [512, False, 0.25]]             # 4 [16,256,80,80]
  - [-1, 1, Conv, [512, 3, 2]]                    # 5-P4/16 [16,512,40,40]
  - [-1, 4, A2C2f, [512, True, 4]]                # 6 [16,512,40,40]


head: 
   # Upsample and feature fusion
   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]    # 7 [16,512,80,80]
   - [[-1, 4], 1, Concat, [1]]                     # 8 [16,768,80,80] (256+512)
   - [-1, 2, CSP_LGC, [256]]                       # 9 [16,256,80,80]

   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]    # 10 [16,256,160,160]
   - [[-1, 2], 1, Concat, [1]]                     # 11 [16,384,160,160] (128+256)
   - [-1, 3, CSP_LGC, [128]]                       # 12-P2/8 [16,128,160,160]

   # Enhanced path
   - [-1, 1, EnhancedBlock, [128]]                 # 13 [16,128,80,80]
   - [9, 1, Conv, [256, 3, 1]]                     # 14 [16,256,80,80]
   - [6, 1, nn.Upsample, [None, 2, "nearest"]]     # 15 [16,512,80,80]

 #  256,80,80  ÂèåÂç∑ÁßØ   ÊãºÊé•ÂêéÁöÑÁâπÂæÅ
   # Multi-scale fusion
   - [[-1, 14], 1, Concat, [1]]                    # 16 [16,768,80,80] (256+512)
   - [[-1, 13], 1, Concat, [1]]                    # 17 [16,896,80,80] (768+128)
   - [-1, 1, Conv, [256, 3, 1]]                    # 18 [16,256,80,80]
   - [-1, 1, DCFA, [256]]                          # 19 [16,256,80,80]

   - [-1, 1, nn.Upsample, [None, 2, "nearest"]]    # 20 [16,256,160,160]
   - [[-1, 12], 1, Concat, [1]]                    # 21 [16,384,160,160]
   - [-1, 3, CSP_LGC, [128]]                       # 22 [16,128,160,160]  P3

   - [-1, 1, Conv, [256, 3, 2]]                    # 23 [16,128,80,80]
   - [[-1, 9], 1, Concat, [1]]                     # 24 [16,384,80,80]
   - [-1, 2, CSP_LGC, [256]]                       # 25 [16,256,80,80]  P4

   - [-1, 1, Conv, [256, 3, 2]]                    # 26 [16,256,40,40]
   - [[-1, 6], 1, Concat, [1]]                     # 27 [16,768,40,40]
   - [-1, 2, CSP_LGC, [512]]                       # 28 [16,512,40,40]  P5

   # Detection head
   - [[22, 25, 28], 1, Detect, [nc]]               # Detect(P3[160,160],P4[80,80],P5[40,40])


